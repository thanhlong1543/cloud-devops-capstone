version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:

  build-webapp:
    docker:
      - image: node:14-alpine
    steps:
      - checkout
      - restore_cache:
          keys: [react-template-build]
      # - run:
      #     name: run lint
      #     command: |
      #       . venv/bin/activate
      #       make lint      
      - run:
          name: Build front-end
          command: |
            cd react-template
            yarn
            yarn build
      - save_cache:
          paths: [react-template/node_modules]
          key: react-template-build

  build-docker:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
            - react-template-build
          paths:
            - /caches/cloud-devops-capstone.tar
            - react-template/node_modules
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76 
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/cloud-devops-capstone.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build -t cloud-devops-capstone ./react-template
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/cloud-devops-capstone.tar cloud-devops-capstone      
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/cloud-devops-capstone.tar
      - run:
          name: Push docker image to Docker hub
          command: |
            TAG=thanhlong1543/cloud-devops-capstone:0.1.$CIRCLE_BUILD_NUM
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag cloud-devops-capstone $TAG
            docker push $TAG
  
  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster

  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: react-template/deployment.yaml
          resource-name: deployment/capstone-frontend
          
workflows:
  default:
    jobs:
      - build-webapp
      - build-docker:
          requires: [build-webapp]
      # - aws-eks/create-cluster:
      #     cluster-name: my-eks-capstone
      - test-cluster:
          cluster-name: my-eks-capstone
          requires:
            - aws-eks/create-cluster
      - create-deployment:
          cluster-name: my-eks-capstone
          requires:
            - aws-eks/create-cluster
